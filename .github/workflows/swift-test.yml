name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-spm:
    strategy:
      matrix:
        os: [ macos-11 ]
        swift-version: [ '' ]
        xcode-version: [ '^13.0' ]
        include:
          - os: macos-12
            swift-version: ''
            xcode-version: '^14.0'
          # - os: ubuntu-20.04
          #   swift-version: 5.5
          #   xcode-version: ''
          # - os: ubuntu-20.04
          #   swift-version: 5.6
          #   xcode-version: ''
          # - os: ubuntu-20.04
          #   swift-version: 5.7
          #   xcode-version: ''
          # - os: ubuntu-22.04
          #   swift-version: 5.7
          #   xcode-version: ''

    runs-on: ${{matrix.os}}

    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        if: runner.os == 'macOS'
        with:
          xcode-version: ${{matrix.xcode-version}}
      - uses: swift-actions/setup-swift@v1.18.0
        if: runner.os == 'Linux'
        id: swift-setup-linux
        with:
          swift-version: ${{matrix.swift-version}}
      # Workaround for https://github.com/swift-actions/setup-swift/issues/406
      - uses: sersoft-gmbh/swift-version-action@v2
        if: runner.os == 'macOS'
        id: swift-setup-macos
      - id: swift-setup
        run: |
          if [ '${{runner.os}}' == 'macOS' ]; then
            echo "::set-output name=version::${{steps.swift-setup-macos.outputs.version}}"
          else
            echo "::set-output name=version::${{steps.swift-setup-linux.outputs.version}}"
          fi
      - name: Read OS Version
        uses: sersoft-gmbh/os-version-action@v2.0.0
        id: os-version
      - uses: actions/checkout@v3.0.2
      - uses: actions/cache@v3.0.8
        with:
          path: .build
          key: ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-setup.outputs.version}}-${{hashFiles('**/Package.resolved')}}
          restore-keys: |
            ${{runner.os}}-${{steps.os-version.outputs.version}}-${{github.repository}}-spm-${{steps.swift-setup.outputs.version}}-
      - name: Build & Test
        run: swift test -v --parallel --enable-code-coverage
      - name: Generate Coverage Files
        uses: sersoft-gmbh/swift-coverage-action@v3.0.0
        id: coverage-files
      - uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          fail_ci_if_error: true

  test-xcode:
    runs-on: macos-12
    strategy:
      matrix:
        destination:
          - platform=macOS
          - platform=iOS Simulator,OS=latest,name=iPhone 13 Pro
          - platform=iOS Simulator,OS=latest,name=iPad Pro (11-inch) (3rd generation)
          - platform=tvOS Simulator,OS=latest,name=Apple TV 4K (2nd generation)
          - platform=watchOS Simulator,OS=latest,name=Apple Watch Series 7 (45mm)
    steps:
      - uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: ^14.0
      - uses: actions/checkout@v3.0.2
      - uses: sersoft-gmbh/xcodebuild-action@v2.0.0
        with:
          spm-package: './'
          scheme: app-groups
          destination: ${{matrix.destination}}
          action: test
          parallel-testing-enabled: true
          enable-code-coverage: true
      - uses: sersoft-gmbh/swift-coverage-action@v3.0.0
        id: coverage-files
      - uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ${{join(fromJSON(steps.coverage-files.outputs.files), ',')}}
          fail_ci_if_error: true
